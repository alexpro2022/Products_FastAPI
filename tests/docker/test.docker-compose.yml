services:

  db_test:
    container_name: postgres_tests
    image: postgres:15.1-alpine
    environment:
      - POSTGRES_USER=$TEST_DATABASE_USERNAME
      - POSTGRES_PASSWORD=$TEST_DATABASE_PASSWORD
      - POSTGRES_DB=$TEST_DATABASE_NAME
    expose:
      - ${TEST_DATABASE_PORT}
    volumes:
      - /var/lib/postgresql/data/

  tests:
    container_name: tests
    environment:
       - APP_IS_DEBUG=False
    build:
      context: ../..
      dockerfile: tests/docker/test.Dockerfile
    command: bash -c "pytest tests --cov --cov-config=tests/.coveragerc"  # ::test_docs_basic_auth_raises"  # tests/integration_tests/test_products_auth_endpoints.py::test_get_document_returns_obj"  # tests/fixtures/test_fixtures.py::test_environment"  #     tests/integration_tests/test_products_auth_endpoints.py::test_post_with_media"  # tests/fixtures/test_utils.py::test_base64"  # tests/fixtures/test_fixtures.py::test_get_product_create_data_fixture"  tests/unit_tests/schemas/test_validators.py::test_validate_returns_crated_obj"  # 
    depends_on:
      - db_test
    env_file:
      - ../.env

  redis:
    image: redis:latest
    expose:
      - ${TEST_REDIS_PORT}

  #rabbitmq:
  #  image: rabbitmq:latest
  #  env_file:
  #    - ../.env
