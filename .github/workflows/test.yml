name: Run pytest

on:
  push:
    branches:
      - '**'

jobs:

  lint:
    name: Check the code with python linters
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgrespw
          POSTGRES_DB: test

      redis:
        image: redis:latest
        ports:
          - 6379:6379

    env:
      APP_IS_DEBUG: False
      APP_DOCS_USERNAME: username
      APP_DOCS_PASSWORD: password
      S3_BUCKET_PRIVATE: 48111b17-04a3c7f0-aaaa-bbbb-cccc-5294c1332fef
      S3_BUCKET_PUBLIC: 48111b17-8a18978c-aaaa-bbbb-cccc-3d47d3e3cc72
      TEST_DATABASE_USERNAME: postgres
      TEST_DATABASE_PASSWORD: postgrespw
      TEST_DATABASE_HOST: "0.0.0.0"
      TEST_DATABASE_PORT: 5432
      TEST_DATABASE_NAME: test
      TEST_REDIS_HOST: "0.0.0.0"
      TEST_REDIS_PORT: 6379

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r tests/requirements.txt
          python -m pip install --no-cache-dir poetry==1.8.3
          poetry config virtualenvs.create false
          poetry install --without dev --no-interaction --no-ansi 
          rm -rf $(poetry config cache-dir)/{cache,artifacts}
          pip install -r tests/requirements.txt
      - name: Run Tests
        run: |
          pytest tests -x --cov --cov-config=tests/.coveragerc --cov-report=xml          
